{"version":3,"file":"component---src-pages-search-tsx-5875d274645e320acd59.js","mappings":"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","sources":["webpack://inweb/./src/page/Item.tsx","webpack://inweb/./node_modules/react-bootstrap/esm/Badge.js","webpack://inweb/./src/page/Search.tsx","webpack://inweb/./src/pages/search.tsx","webpack://inweb/./src/helpers/time.js"],"sourcesContent":["import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport Table from \"react-bootstrap/Table\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { timeSince } from \"../helpers/time\";\n\nconst formatData = (e) => {\n  if (Object.prototype.toString.call(e) === \"[object Date]\") {\n    return timeSince(e);\n  }\n\n  if (typeof e === \"string\") {\n    return e;\n  }\n\n  if (typeof e === \"object\") {\n    return e.join(\",\");\n  }\n};\n\nconst IndexPage = ({ items, cols, Header, Body, onClick }) => {\n  return (\n    <Accordion defaultActiveKey={[\"0\"]} alwaysOpen>\n      {items.map((e, i) => (\n        <Accordion.Item eventKey={i}>\n          <Accordion.Header onClick={() => onClick && onClick(e)}>\n            {\" \"}\n            <Header data={e} />{\" \"}\n          </Accordion.Header>\n          <Accordion.Body>\n            <Body data={e} />\n          </Accordion.Body>\n        </Accordion.Item>\n      ))}\n    </Accordion>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n","import _defineProperty from \"/home/runner/work/inweb3.private/inweb3.private/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/home/runner/work/inweb3.private/inweb3.private/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"bg\", \"pill\", \"text\", \"className\", \"as\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bg = _ref.bg,\n      pill = _ref.pill,\n      text = _ref.text,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames(className, prefix, pill && \"rounded-pill\", text && \"text-\".concat(text), bg && \"bg-\".concat(bg))\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport { graphql } from \"gatsby\";\nimport Item from \"../page/Item\";\nimport Form from \"react-bootstrap/Form\";\nimport { WrappedParse as Parse } from \"../vendor/ParseApp\";\nimport Table from \"react-bootstrap/Table\";\nimport { timeSince } from \"../helpers/time\";\nimport { handleLocation } from \"../helpers/data\";\nimport AppContext from \"../context/AppContext\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport {\n  Trans,\n  useTranslation,\n  I18nextContext,\n} from \"gatsby-plugin-react-i18next\";\n\nconst handleData = (key, e) => {\n  if (Array.isArray(e)) {\n    return e.map((obj) => <Badge> {obj.label} </Badge>);\n  }\n\n  if (key === \"docUrl\") {\n    return (\n      <a className=\"color-brand-1\" href={e}>\n        Download\n      </a>\n    );\n  }\n\n  if (Object.prototype.toString.call(e) === \"[object Date]\") {\n    return timeSince(e);\n  }\n\n  if (typeof e === \"string\") {\n    return <Badge> {e}</Badge>;\n  }\n};\n\nconst Header = ({ data }) => {\n  const { t } = useTranslation();\n  const dataModel = data.get(\"data\");\n  const jobTag =\n    dataModel?.tags && dataModel?.tags.map((tag) => tag.name).join(\" \");\n\n  return (\n    <div className=\"d-flex flex-row\">\n      <div>{`Looking For job Matching ${jobTag}`}</div>\n      <div className=\"ms-1\">{handleData(\"\", data.get(\"createdAt\"))} ago</div>\n    </div>\n  );\n};\n\nconst Body = ({ data, permissionToAccessDetails }) => {\n  const { t } = useTranslation();\n\n  const [profile, setProfile] = React.useState(null);\n  const dataModel = data.get(\"data\");\n  const jobTag =\n    dataModel?.tags && dataModel?.tags.map((tag) => tag.name).join(\" \");\n  const { useEffect } = React;\n  const [message, setMessage] = React.useState(\"\");\n  const applicationId = data.get(\"objectId\");\n  useEffect(() => {}, []);\n  return (\n    <div className=\"d-flex flex-column\">\n      <h3>Application Detail</h3>\n\n      <Row>\n        {Object.keys(dataModel)\n          .filter((e) =>\n            [\n              \"tag\",\n              \"expectSalary\",\n              \"noticePeriod\",\n              \"location\",\n              \"docUrl\",\n              \"citizenship\",\n            ].includes(e)\n          )\n          .map((key) => (\n            <Col>\n              <div>{t(key)}:</div> <div>{handleData(key, dataModel[key])}</div>\n            </Col>\n          ))}\n      </Row>\n      <h3>Contact Details</h3>\n      <Row>\n        <Col>\n          {}\n\n          {\n            <Button\n              onClick={() => {\n                Parse.Cloud.run(\"getProfileByID\", {\n                  id: data.get(\"owner\"),\n                }).then((item) => {\n                  if (item) {\n                    setProfile(item);\n                  } else {\n                    Parse.Cloud.run(\"createRequest\", {\n                      applicationId: data.id,\n                    }).then((e) => {\n                      setMessage(\"Access Requested\");\n                    });\n                  }\n                });\n              }}\n            >\n              {\" \"}\n              {message ? message : \"Request Data\"}\n            </Button>\n          }\n          <Row>\n            {profile &&\n              Object.keys(profile.get(\"data\"))\n                .filter((e) => [\"telCode\", \"contact\"].includes(e))\n                .map((key) => (\n                  <Col>\n                    <div>{t(key)}:</div>{\" \"}\n                    <div>{handleData(key, profile.get(\"data\")[key])}</div>\n                  </Col>\n                ))}\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst IndexPage = () => {\n  const [items, setItems] = React.useState([]);\n\n  const [hasProfile, setHasProfile] = React.useState(null);\n  const [queryWord, setQueryWord] = React.useState(\"\");\n  const { t } = useTranslation();\n\n  const context = React.useContext(AppContext);\n  const i18context = React.useContext(I18nextContext);\n  React.useEffect(() => {\n    context.showLoading(true);\n    Parse.Cloud.run(\"searchApplication\").then((items) => {\n      setItems(items);\n      context.showLoading(false);\n    });\n\n    Parse.Cloud.run(\"getMyProfile\").then((profile) => {\n      setHasProfile(!!profile);\n    });\n  }, []);\n  const handleData = (data) => {};\n\n  const queryApplication = (queryWord) => {\n    context.showLoading(true);\n    Parse.Cloud.run(\"searchApplication\", { queryWord }).then((items) => {\n      setItems(items);\n      context.showLoading(false);\n    });\n  };\n  return (\n    <Container className=\"\">\n      <h3> {t(\"searchapplication\")}</h3>\n      <Row>\n        <Col>\n          {!hasProfile && (\n            <Alert key={\"primary\"} variant={\"primary\"}>\n              {t(\"searchNotEnabled\")}\n              <ol>{!hasProfile && <li> {t(\"noprofile\")}</li>}</ol>\n            </Alert>\n          )}\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs=\"6\">\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"keyword search\"\n              onChange={(e) => setQueryWord(e.target.value)}\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Button\n            onClick={() => {\n              queryApplication(queryWord);\n            }}\n          >\n            {\" \"}\n            Search{\" \"}\n          </Button>\n        </Col>\n      </Row>\n\n      <Row>\n        {hasProfile && (\n          <Col\n            className=\"\"\n            onClick={() => {\n              queryApplication(queryWord);\n            }}\n          >\n            {items.length} result\n            <Item\n              onClick={handleData}\n              items={items}\n              Body={Body}\n              Header={Header}\n            />\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport Layout from \"../components/layout/Layout\";\nimport { WrappedParse as Parse } from \"../vendor/ParseApp\";\nimport Table from \"react-bootstrap/Table\";\nimport { timeSince } from \"../helpers/time\";\nimport { handleLocation } from \"../helpers/data\";\nimport Search from \"../page/Search\";\nimport {\n  Trans,\n  useTranslation,\n  I18nextContext,\n} from \"gatsby-plugin-react-i18next\";\nimport { graphql } from \"gatsby\";\nimport Badge from \"react-bootstrap/Badge\";\n\nconst handleData = (key, e) => {\n  if (key === \"location\") {\n    return handleLocation(e);\n  }\n\n  if (Object.prototype.toString.call(e) === \"[object Date]\") {\n    return timeSince(e);\n  }\n\n  if (typeof e === \"string\") {\n    return e;\n  }\n\n  if (Array.isArray(e)) {\n    return e.map((obj) => <Badge bg=\"secondary\"> {obj?.label} </Badge>);\n  }\n};\n\nconst IndexPage = () => {\n  const [items, setItems] = React.useState([]);\n  const { t } = useTranslation();\n  React.useEffect(() => {\n    Parse.Cloud.run(\"searchApplication\").then((items) => {\n      setItems(items);\n    });\n  }, []);\n\n  return (\n    <Layout>\n      <Search />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","export const timeSince = (date) => {\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = seconds / 31536000;\n\n  if (interval > 1) {\n    return Math.floor(interval) + \" years\";\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    return Math.floor(interval) + \" months\";\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    return Math.floor(interval) + \" days\";\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    return Math.floor(interval) + \" hours\";\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    return Math.floor(interval) + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n};\n"],"names":["items","Header","cols","Body","onClick","React","Accordion","defaultActiveKey","alwaysOpen","map","e","i","eventKey","data","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_ref","ref","bsPrefix","bg","pill","text","className","_ref$as","as","Component","props","prefix","concat","displayName","defaultProps","handleData","Array","isArray","obj","Badge","label","href","prototype","toString","call","timeSince","dataModel","useTranslation","t","get","jobTag","tags","tag","name","join","permissionToAccessDetails","profile","setProfile","useEffect","message","setMessage","Row","includes","Col","Button","Parse","id","then","item","applicationId","setItems","hasProfile","setHasProfile","queryWord","setQueryWord","context","AppContext","I18nextContext","showLoading","queryApplication","Container","Alert","variant","xs","Form","controlId","type","placeholder","onChange","value","Item","Layout","Search","Head","date","seconds","Math","floor","Date","interval"],"sourceRoot":""}