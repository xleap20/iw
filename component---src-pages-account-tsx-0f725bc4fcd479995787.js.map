{"version":3,"file":"component---src-pages-account-tsx-0f725bc4fcd479995787.js","mappings":"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","sources":["webpack://inweb/./src/page/Account.tsx","webpack://inweb/./src/pages/account.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport Layout from \"../components/layout/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { WrappedParse as Parse } from \"../vendor/ParseApp\";\nimport { getPdfText } from \"../helpers/pdf\";\nimport { countries } from \"../helpers/country\";\nimport AppContext from \"../context/AppContext\";\nimport {\n  Trans,\n  useTranslation,\n  I18nextContext,\n} from \"gatsby-plugin-react-i18next\";\nimport styled from \"styled-components\";\n\nconst UploadFile = styled.input`\n  display: none;\n`;\n\nenum GenderEnum {\n  female = \"female\",\n  male = \"male\",\n  other = \"other\",\n}\n\ninterface IFormInput {\n  firstName: String;\n  gender: GenderEnum;\n}\n\nexport default function App() {\n  const { t } = useTranslation();\n  const { useEffect, useContext, useRef } = React;\n  const [file, setFile] = React.useState(null);\n  const [model, setModel] = React.useState({});\n  const fileInput = useRef(null);\n\n  const clickProfile = () => {\n    fileInput?.current.click();\n  };\n\n  const setModelValue = (name, value) => {\n    setModel({\n      ...model,\n      [name]: value,\n    });\n    console.log(model);\n  };\n\n  const context = useContext(AppContext);\n\n  useEffect(() => {\n    context.showLoading(true);\n    Parse.Cloud.run(\"getMyProfile\").then((app) => {\n      if (app) {\n        setModel({\n          ...app.get(\"data\"),\n        });\n      }\n\n      context.showLoading(false);\n    });\n  }, [context.showLoading]);\n\n  const isModelValid = () => {\n    return model?.location?.length && model?.tags?.length && model.consent;\n  };\n  return (\n    <>\n      <Container className=\"\">\n        <Row>\n          <Col>\n            <div className=\"d-flex flex-column\">\n              <h3> {t(\"myprofile\")}</h3>\n              <div>{t(\"shareProfile\")}</div>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <img\n              onClick={() => clickProfile()}\n              src={model.docUrl || \"/assets/images/profile.jpg\"}\n              alt=\"mdo\"\n              width=\"128\"\n              height=\"128\"\n              class=\"rounded-circle me-1\"\n            ></img>\n            <input\n              name=\"document\"\n              ref={fileInput}\n              className=\"file-upload d-none\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={async (event) => {\n                const parseFile = new Parse.File(\n                  \"document\",\n                  event.target.files[0]\n                );\n                const document = await parseFile.save();\n                const url = document.url();\n\n                const newModel = {\n                  ...model,\n                  docUrl: url,\n                };\n                setModel(newModel);\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                value={model.name}\n                onChange={(v) => setModelValue(\"name\", v.target.value)}\n              />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Family Name</Form.Label>\n              <Form.Control\n                value={model.familyName}\n                type=\"text\"\n                placeholder=\"\"\n                onChange={(v) => setModelValue(\"familyName\", v.target.value)}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Contact Number</Form.Label>\n              <Row>\n                <Col xs={3}>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Country Code\"\n                    value={model?.telCode}\n                    onChange={(e) => setModelValue(\"telCode\", e.target.value)}\n                  />\n                </Col>\n                <Col xs={9}>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={model?.contact}\n                    onChange={(e) => setModelValue(\"contact\", e.target.value)}\n                  />\n                </Col>\n              </Row>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Email Address</Form.Label>\n              <Row>\n                <Col xs={6}>\n                  <Form.Control\n                    disabled={true}\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    value={Parse?.User?.current()?.get(\"email\")}\n                  />\n                </Col>\n              </Row>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form>\n              <Button\n                variant=\"primary\"\n                onClick={async () => {\n                  context.showLoading(true);\n                  await Parse.Cloud.run(\"updateProfile\", {\n                    model: {\n                      data: model,\n                    },\n                  });\n                  context.showLoading(false);\n                }}\n              >\n                Update\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport const Head: HeadFC = () => (\n  <>\n    <title></title>\n    <script src=\"/assets/pdf/pdf.js\" type=\"text/javascript\" />\n  </>\n);\n","import * as React from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport Layout from \"../components/layout/Layout\";\n\nimport AppContext from \"../context/AppContext\";\nimport Account from \"../page/Account\";\nimport { graphql } from \"gatsby\";\nenum GenderEnum {\n  female = \"female\",\n  male = \"male\",\n  other = \"other\",\n}\n\ninterface IFormInput {\n  firstName: String;\n  gender: GenderEnum;\n}\n\nexport default function App() {\n  const { useEffect, useContext } = React;\n\n  const options = [\"tesst\", \"123\"];\n  const [file, setFile] = React.useState(null);\n  const [model, setModel] = React.useState({\n    title: \"CV\",\n    tags: [],\n    location: [{ id: \"SG\", label: \"Singapore\" }],\n  });\n\n  const setModelValue = (name, value) => {\n    setModel({\n      ...model,\n      [name]: value,\n    });\n    console.log(model);\n  };\n\n  const context = useContext(AppContext);\n\n  const isModelValid = () => {\n    return model?.location?.length && model?.tags?.length && model.consent;\n  };\n  return (\n    <Layout>\n      <section className=\"section\">\n        <Account />\n      </section>\n    </Layout>\n  );\n}\n\nexport const Head: HeadFC = () => (\n  <>\n    <title></title>\n    <script src=\"/assets/pdf/pdf.js\" type=\"text/javascript\" />\n  </>\n);\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["GenderEnum","styled","App","t","useTranslation","useEffect","React","useContext","useRef","model","setModel","fileInput","setModelValue","name","value","console","log","context","AppContext","showLoading","Parse","then","app","get","Container","className","Row","Col","onClick","current","click","src","docUrl","alt","width","height","class","ref","type","accept","onChange","event","_context","parseFile","target","files","save","document","url","newModel","Form","controlId","placeholder","v","familyName","xs","telCode","e","contact","disabled","_Parse$User","_Parse$User$current","Button","variant","_context2","data","title","tags","location","id","label","Layout","Account","Head"],"sourceRoot":""}