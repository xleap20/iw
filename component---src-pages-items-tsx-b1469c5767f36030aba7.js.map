{"version":3,"file":"component---src-pages-items-tsx-b1469c5767f36030aba7.js","mappings":"2HAsCA,IAlBkB,SAAC,GAA4C,IAA1CA,EAAyC,EAAzCA,MAAaC,GAA4B,EAAlCC,KAAkC,EAA5BD,QAAQE,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9C,OACEC,EAAAA,cAACC,EAAAA,EAAD,CAAWC,iBAAkB,CAAC,KAAMC,YAAU,GAC3CR,EAAMS,KAAI,SAACC,EAAGC,GAAJ,OACTN,EAAAA,cAACC,EAAAA,EAAAA,KAAD,CAAgBM,SAAUD,GACxBN,EAAAA,cAACC,EAAAA,EAAAA,OAAD,CAAkBF,QAAS,kBAAMA,GAAWA,EAAQM,EAApD,GACG,IACDL,EAAAA,cAACJ,EAAD,CAAQY,KAAMH,IAAM,KAEtBL,EAAAA,cAACC,EAAAA,EAAAA,KAAD,KACED,EAAAA,cAACF,EAAD,CAAMU,KAAMH,KAPjB,IAHP,C,oJCYMT,EAAS,SAAC,GAAa,IAdTS,EAcFG,EAAW,EAAXA,KACVC,EAAYD,EAAKE,IAAI,QACrBC,GAASF,aAAAA,EAAAA,EAAWG,QAAQH,aAAnB,EAAmBA,EAAWG,KAAKC,KAAK,MACvD,OACEb,EAAAA,cAAAA,MAAAA,CAAKc,UAAU,UAAf,eACkBH,EAChBX,EAAAA,cAAAA,MAAAA,MApBcK,EAoBGG,EAAKE,IAAI,aAnBY,kBAAtCK,OAAOC,UAAUC,SAASC,KAAKb,IAC1Bc,EAAAA,EAAAA,GAAUd,GAGF,iBAANA,EACFA,EAGQ,iBAANA,EACFA,EAAEQ,KAAK,UADhB,GAWI,QANN,EAkCA,UAvBkB,WAChB,MAA0Bb,EAAAA,SAAe,IAAlCL,EAAP,KAAcyB,EAAd,KAQA,OANApB,EAAAA,WAAgB,WACdqB,EAAAA,EAAAA,MAAAA,IAAgB,gBAAgBC,MAAK,SAAC3B,GACpCyB,EAASzB,EADX,GADF,GAIG,IAGDK,EAAAA,cAACuB,EAAAA,EAAD,KACEvB,EAAAA,cAACwB,EAAAA,EAAD,CAAWV,UAAU,IACnBd,EAAAA,cAAAA,KAAAA,KAAAA,kBACAA,EAAAA,cAACyB,EAAAA,EAAD,KACEzB,EAAAA,cAAC0B,EAAAA,EAAD,CAAKZ,UAAU,cAAcf,QAAS,WAAQ,GAC5CC,EAAAA,cAAC2B,EAAAA,EAAD,CAAMhC,MAAOA,EAAOE,KAAM,CAAC,QAAS,QAASD,OAAQA,OAfjE,EAyBO,IAAMgC,EAAe,kBAAM5B,EAAAA,cAAAA,QAAAA,KAAAA,YAA3B,C,uDCpEA,IAAMmB,EAAY,SAACU,GACxB,IAAIC,EAAUC,KAAKC,OAAO,IAAIC,KAASJ,GAAQ,KAE3CK,EAAWJ,EAAU,QAEzB,OAAII,EAAW,EACNH,KAAKC,MAAME,GAAY,UAEhCA,EAAWJ,EAAU,QACN,EACNC,KAAKC,MAAME,GAAY,WAEhCA,EAAWJ,EAAU,OACN,EACNC,KAAKC,MAAME,GAAY,SAEhCA,EAAWJ,EAAU,MACN,EACNC,KAAKC,MAAME,GAAY,UAEhCA,EAAWJ,EAAU,IACN,EACNC,KAAKC,MAAME,GAAY,WAEzBH,KAAKC,MAAMF,GAAW,UAC9B,C","sources":["webpack://inweb/./src/page/Item.tsx","webpack://inweb/./src/pages/items.tsx","webpack://inweb/./src/helpers/time.js"],"sourcesContent":["import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport Table from \"react-bootstrap/Table\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { timeSince } from \"../helpers/time\";\n\nconst formatData = (e) => {\n  if (Object.prototype.toString.call(e) === \"[object Date]\") {\n    return timeSince(e);\n  }\n\n  if (typeof e === \"string\") {\n    return e;\n  }\n\n  if (typeof e === \"object\") {\n    return e.join(\",\");\n  }\n};\n\nconst IndexPage = ({ items, cols, Header, Body, onClick }) => {\n  return (\n    <Accordion defaultActiveKey={[\"0\"]} alwaysOpen>\n      {items.map((e, i) => (\n        <Accordion.Item eventKey={i}>\n          <Accordion.Header onClick={() => onClick && onClick(e)}>\n            {\" \"}\n            <Header data={e} />{\" \"}\n          </Accordion.Header>\n          <Accordion.Body>\n            <Body data={e} />\n          </Accordion.Body>\n        </Accordion.Item>\n      ))}\n    </Accordion>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n","import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport Layout from \"../components/layout/Layout\";\nimport { Link, navigate } from \"gatsby\";\n\nimport BSCard from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Figure from \"react-bootstrap/Figure\";\nimport Button from \"react-bootstrap/Button\";\n\nimport Item from \"../page/Item\";\n\nimport Parse from \"../vendor/ParseApp\";\nimport Table from \"react-bootstrap/Table\";\nimport { timeSince } from \"../helpers/time\";\n\nconst formatData = (e) => {\n  if (Object.prototype.toString.call(e) === \"[object Date]\") {\n    return timeSince(e);\n  }\n\n  if (typeof e === \"string\") {\n    return e;\n  }\n\n  if (typeof e === \"object\") {\n    return e.join(\",\");\n  }\n};\n\nconst Header = ({ data }) => {\n  const dataModel = data.get(\"data\");\n  const jobTag = dataModel?.tags && dataModel?.tags.join(\",\");\n  return (\n    <div className=\"d-flex\">\n      {`Looking For ${jobTag}`}\n      <div>{formatData(data.get(\"createdAt\"))} ago</div>\n    </div>\n  );\n};\n\nconst IndexPage = () => {\n  const [items, setItems] = React.useState([]);\n\n  React.useEffect(() => {\n    Parse.Cloud.run(\"findMineItem\").then((items) => {\n      setItems(items);\n    });\n  }, []);\n\n  return (\n    <Layout>\n      <Container className=\"\">\n        <h3>My Application</h3>\n        <Row>\n          <Col className=\"text-center\" onClick={() => {}}>\n            <Item items={items} cols={[\"title\", \"tags\"]} Header={Header} />\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n","export const timeSince = (date) => {\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = seconds / 31536000;\n\n  if (interval > 1) {\n    return Math.floor(interval) + \" years\";\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    return Math.floor(interval) + \" months\";\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    return Math.floor(interval) + \" days\";\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    return Math.floor(interval) + \" hours\";\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    return Math.floor(interval) + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n};\n"],"names":["items","Header","cols","Body","onClick","React","Accordion","defaultActiveKey","alwaysOpen","map","e","i","eventKey","data","dataModel","get","jobTag","tags","join","className","Object","prototype","toString","call","timeSince","setItems","Parse","then","Layout","Container","Row","Col","Item","Head","date","seconds","Math","floor","Date","interval"],"sourceRoot":""}